# https://gist.github.com/bistory/629b596c5c49d6b01f5cf06ea2f2690f
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|default(1000) %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|default(1000) %}
    RESPOND TYPE=error MSG="Start UNLOAD_FILAMENT"
    SAVE_GCODE_STATE NAME=unload_state
    RESPOND TYPE=error MSG="UNLOAD_FILAMENT:22"
    G91
    G92 E0
    RESPOND TYPE=error MSG="UNLOAD_FILAMENT:26"
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    RESPOND TYPE=error MSG="UNLOAD_FILAMENT:29"
    RESPOND TYPE=error MSG="UNLOAD_FILAMENT:32"

[gcode_shell_command backup_cfg]
command: sh /home/pi/git_config_push.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg    RESTORE_GCODE_STATE NAME=unload_state
    RESPOND TYPE=error MSG="UNLOAD_FILAMENT:34"


######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[output_pin BEEPER_pin]
pin: PB5
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro START_PRINT]
description:
  "G-code to run at the start of a print.
  Replace your slicer's start G-code with this.
  Check the README for more details on usage.
  @param {int} [HOTEND=200] - The target hotend temp
  @param {int} [BED=60] - The target bed temp
  @param {bool} [RELATIVE_E_MODE=false] - Whether the extruder should be in relative mode
  @param {bool} [PROBE=false] - Whether or not to build a new bed mesh
  @param {int,int} [PROBE_AREA_START=min,min] - Start of area to probe
  @param {int,int} [PROBE_AREA_END=max,max] - End of area to probe"
gcode:
  {% set hotend_temp = params.HOTEND|default(200)|int %}
  {% set bed_temp = params.BED|default(60)|int %}
  {% set relative_extruder = params.RELATIVE_E_MODE|default(false)|string %}
  {% set probe_area_start = params.PROBE_AREA_START|default(printer.toolhead.axis_minimum.x,printer.toolhead.axis_minimum.y)|string %}
  {% set probe_area_end = params.PROBE_AREA_END|default(printer.toolhead.axis_maximum.x,printer.toolhead.axis_maximum.y)|string %}

  G90 ;Absolute positioning
  M220 S100 ;Reset feedrate
  M221 S100 ;Reset flowrate
  {% if relative_extruder|lower == 'true' %}
    M83 ;Set extruder to relative mode
  {% else %}
    M82 ;Set extruder to absolute mode
  {% endif %}

  M140 S{bed_temp} ;Start heating bed
  M190 S{bed_temp} ;Wait for bed to reach temp target
  # SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
  M104 S{hotend_temp * 0.75} T0 ;Start heating hotend, but don't wait

  G28 ;Home

  M109 S{hotend_temp} T0 ;Finish heating hotend
  # SET_HEATER_TEMPERATURE HEATER=extruder TARGET={hotend_temp}

  NOZZLE_PRIME_LINE

[gcode_macro NOZZLE_PRIME_LINE]
description:
  Prime the nozzle by laying a strip of plastic along the left side of the bed
gcode:
  SAVE_GCODE_STATE NAME=nozzle_prime_state

  {% set pi = 3.1415926536 %}
  {% set nozzle_diam = printer.configfile.settings.extruder.nozzle_diameter %}
  # TODO: try reading the filament diameter from a sensor
  {% set filament_diam = printer.configfile.settings.extruder.filament_diameter %}
  # TODO: figure out how to recover if firmware retraction isn't defined
  #{% set retract_len = printer.configfile.settings.firmware_retraction.retract_length %}
  {% set retract_len = 2 %}
  {% set layer_height = 0.28 %}
  {% set line_width = nozzle_diam * 1.75 %}
  {% set x_start = printer.toolhead.axis_minimum.x + 15 %}
  {% set x_end = x_start + line_width %}
  {% set y_start = printer.toolhead.axis_minimum.y + 25 %}
  {% set y_end = y_start + 180 %}
  {% if y_end > printer.toolhead.axis_maximum.y - 20 %}
    {% set y_end = printer.toolhead.axis_maximum.y - 20 %}
  {% endif %}
  {% set y_diff = y_end - y_start %}
  {% set extrude_cross_section_area = (pi * ((layer_height / 2) ** 2)) + ((line_width - layer_height) * layer_height) %}
  {% set extrude_vol = y_diff * extrude_cross_section_area %}
  # TODO: figure out why my E math is wrong.
  # I'd expect E-vals to be 15, but I'm getting ~8.38
  {% set extrude_len = (extrude_vol * 1.75) / (pi * (filament_diam / 2) ** 2) %}
  ##### end of definitions #####

  G90 ;Absolute positionning
  M82 ;Absolute extrusion
  G92 E0 ;Reset extruder

  G1 Z5.0 F3000 ;Move Z axis up

  # TODO: consider priming along the front of the bed
  G1 X{x_start} Y{y_start} F5000.0 ;Move tool to XY pos
  G1 Z{layer_height} F5000.0 ;Move tool down
  G1 X{x_start} Y{y_end} Z{layer_height} F1500.0 E{extrude_len} ;Start priming wipe
  G1 X{x_end} Y{y_end} Z{layer_height} F5000.0
  G1 X{x_end} Y{y_start} Z{layer_height} F1500.0 E{extrude_len * 2} ;Finish priming wipe

  G1 Z5.0 E{(extrude_len * 2) - retract_len} F3000 ;Move Z axis up & retract
  G92 E0 ;Reset extruder

  RESTORE_GCODE_STATE NAME=nozzle_prime_state

[gcode_macro PRINT_END]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
